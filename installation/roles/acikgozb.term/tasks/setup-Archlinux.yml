- name: "Install and configure Alacritty for Arch Linux."
  block:
    - name: "Clone Alacritty source from GitHub."
      become_user: "{{ dotfiles_user }}"
      ansible.builtin.git:
        repo: "{{ alacritty_git_repo }}"
        dest: "{{ lib_path }}/alacritty"
        clone: true

    - name: "Ensure that Alacritty dependencies exist on the host."
      community.general.pacman:
        name: "{{ item }}"
        state: present
      with_items: "{{ alacritty_deps[ansible_os_family] }}"

    - name: "Ensure that Alacritty is built via cargo."
      become_user: "{{ dotfiles_user }}"
      ansible.builtin.shell:
        cmd: "source {{ xdg_config_home }}/{{ dotfiles_shell }}/.{{ dotfiles_shell }}rc; cd {{ lib_path }}/alacritty; cargo build --release --no-default-features --features=wayland"
        executable: "{{ dotfiles_shell_executable_path }}"
        creates: "{{ lib_path }}/alacritty/target/release/alacritty"

    - name: "Fetch Alacritty terminfo."
      become_user: "{{ dotfiles_user }}"
      ansible.builtin.shell:
        cmd: "cd {{ lib_path }}/alacritty; infocmp alacritty"
        executable: "{{ dotfiles_shell_executable_path }}"
      register: infocmp_out

    - name: "Install Alacritty terminfo if it does not exist."
      ansible.builtin.shell:
        cmd: "cd {{ lib_path }}/alacritty; tic -xe alacritty,alacritty-direct, extra/alacritty.info"
      when: infocmp_out.stdout is not defined

    - name: "Ensure that man page directories exist."
      ansible.builtin.file:
        path: "/usr/local/share/man/{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - man1
        - man5

    - name: "Ensure that Alacritty man pages are installed."
      ansible.builtin.shell:
        cmd: "cd {{ lib_path }}/alacritty; {{ item }}"
      with_items:
        - "scdoc < extra/man/alacritty.1.scd | gzip -c | tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null"
        - "scdoc < extra/man/alacritty-msg.1.scd | gzip -c | tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null"
        - "scdoc < extra/man/alacritty-msg.1.scd | gzip -c | tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null"
        - "scdoc < extra/man/alacritty-bindings.5.scd | gzip -c | tee /usr/local/share/man/man5/alacritty-bindings.5.gz > /dev/null"

    - name: "Ensure that Alacritty binary exists under custom_pkg_path."
      ansible.builtin.file:
        src: "{{ lib_path }}/alacritty/target/release/alacritty"
        dest: "{{ custom_pkg_path }}/alacritty"
        state: link
        owner: "{{ dotfiles_user }}"
        group: "{{ dotfiles_user_group }}"
        force: true
        follow: false

    - name: "[Template] Ensure that the Alacritty configuration files are created."
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ role_path }}/files/{{ item }}"
        owner: "{{ dotfiles_user }}"
        group: "{{ dotfiles_user_group }}"
        mode: "0644"
      with_items:
        - alacritty.toml
        - rose-pine.toml
        - everforest-dark.toml

    - name: "Ensure that a subdirectory exists under `dotfiles/.config/alacritty` for the themes."
      ansible.builtin.file:
        path: "{{ dotfiles_repo_path }}/.config/alacritty/themes"
        state: directory
        owner: "{{ dotfiles_user }}"
        group: "{{ dotfiles_user_group }}"
        mode: "0755"

    - name: "Ensure that the Alacritty configuration files are copied under `dotfiles/.config/alacritty`."
      ansible.builtin.copy:
        remote_src: true
        src: "{{ role_path }}/files/{{ item.name }}"
        dest: "{{ dotfiles_repo_path }}/.config/alacritty/{{ item.path }}"
        owner: "{{ dotfiles_user }}"
        group: "{{ dotfiles_user_group }}"
        mode: "0644"
      with_items:
        - {name: "alacritty.toml", path: "alacritty.toml"}
        - {name: "rose-pine.toml", path: "themes/rose-pine.toml",}
        - {name: "everforest-dark.toml", path: "themes/everforest-dark.toml",}

    - name: "Ensure that $XDG_CONFIG_HOME/alacritty is symlinked with `dotfiles/.config/alacritty`."
      ansible.builtin.file:
        src: "{{ dotfiles_repo_path }}/.config/alacritty"
        dest: "{{ xdg_config_home }}/alacritty"
        state: link
        owner: "{{ dotfiles_user }}"
        group: "{{ dotfiles_user_group }}"
        force: true
        follow: false
