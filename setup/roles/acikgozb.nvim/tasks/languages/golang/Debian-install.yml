- name: Remove old Go binary.
  ansible.builtin.file:
    path: /usr/local/go
    state: absent
    # Ansible_architecture possible values: "aarch64" or "x64" or "arm64" or "amd64"
    # TODO: acikgozb: Create a map of arch to determine whether the target host is amd64 or arm64. 
- name: Set arch fact as arm64 (for test purposes).
  ansible.builtin.set_fact:
    arch: arm64
# - name: Debug go binary url
#   ansible.builtin.debug:
#     var: vars['go_linux_' + arch + '_binary_url']
- name: Download Go binary based on given arch.
  ansible.builtin.get_url:
    url: "{{ lookup('vars', 'go_linux_' + arch + '_binary_url') }}"
    dest: /tmp
- name: Unarchive the binary from download.
  ansible.builtin.unarchive:
    remote_src: true
    src: /tmp/{{ lookup('vars', 'go_linux_' + arch + '_binary_name') }}.tar.gz
    dest: /usr/local
- name: Remove the temporary files.
  ansible.builtin.file:
    path: /tmp/{{ lookup('vars', 'go_linux_' + arch + '_binary_name') }}.tar.gz
    state: absent
