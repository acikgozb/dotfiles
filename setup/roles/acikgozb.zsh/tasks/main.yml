- name: "[OS Specific] Install zsh based on host OS."
  ansible.builtin.include_tasks: ./setup-{{ ansible_os_family }}.yml

- name: Create a symlink for .zshenv.
  become_user: "{{ lookup('env', 'USER') }}"
  ansible.builtin.file:
    src: ~/.config/zsh/.zshenv
    dest: ~/.zshenv
    force: true
    state: link

- name: Download Starship installation.
  ansible.builtin.get_url:
    url: https://starship.rs/install.sh
    dest: /tmp
    mode: "0755"

- name: Install Starship
  become_user: "{{ lookup('env', 'USER') }}"
  ansible.builtin.shell:
    cmd: /tmp/install.sh --yes
    executable: /bin/sh
  changed_when: true

- name: Remove the temporary files
  ansible.builtin.file:
    path: /tmp/install.sh
    state: absent

- name: Remove old bash files.
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - .profile
    - .bashrc
    - .bash_history
    - .bash_logout

- name: Change $USER shell to zsh.
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    shell: /bin/zsh

- name: Create .zsh under $HOME to house 3rd party zsh plugins.
  become_user: "{{ lookup('env', 'USER') }}"
  ansible.builtin.file:
    path: "~/.zsh"
    state: directory

- name: Clone 3rd party zsh plugins under .zsh.
  become_user: "{{ lookup('env', 'USER') }}"
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "~/.zsh/{{ item.dest }}"
    clone: true
  with_items:
    - {repo: 'https://github.com/zsh-users/zsh-autosuggestions.git', dest: "zsh-autosuggestions"}
    - {repo: 'https://github.com/jeffreytse/zsh-vi-mode.git', dest: "zsh-vi-mode",}

- name: Ensure that a local directory is created for pre-built binaries.
  become_user: "{{ lookup('env', 'USER') }}"
  block:
    - name: Check $PATH to see whether $HOME/bin/prebuilt exists.
      ansible.builtin.command:
        cmd: grep '/bin/prebuilt' ~/.config/zsh/.zshrc
      register: grep_out
      ignore_errors: true

    - name: Ensure that $HOME/bin/prebuilt directory exists on host.
      ansible.builtin.file:
        path: ~/bin/prebuilt
        state: directory

    - name: Ensure that $HOME/bin/prebuilt exists on $PATH, if check fails.
      ansible.builtin.blockinfile:
        path: ~/.config/zsh/.zshrc
        insertafter: "export PATH="
        marker_begin: "Prebuilt binary lookup -"
        block: |
          export PATH=$HOME/bin/prebuilt:$PATH
        prepend_newline: true
        append_newline: true
      when: grep_out is failed
